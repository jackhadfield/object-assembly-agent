#task1 : build a simple structure using 4 building blocks 

objects: [ green_box, orange_box, white_box, yellow_box ]

# type of symmetry that characterizes each object. Used to check multiple
# possible configurations. Can be "none", "cubic", "cylindrical" (TODO), spherical (TODO).
# Note that the meshes used to estimate the object poses must have their
# origin set correctly for this to work. Parts with cubic or spherical symmetry
# must have their origin at the center of the mesh. Parts with cylindrical symmetry
# must have their origin on the central axis and the central axis must align with the z axis of it's coordinate frame00.
object_symmetries: [ cubic, cubic, cubic, cubic ]

number_of_checks: 2

number_of_subtasks: 3

subtasks:
  #subtask 1 translates to "place object 1 on object 2"
  subtask1:
    description: Place the green box on the orange box
    object: [1] #subtask refers to object 2. Data is a list because we may want
                #to connect two composite objects, eg. [1, 2] with [3, 4]
    relative_object: [2] #compare with single object
    connection_type: place #place objects next to each other. TODO add other options

    # frame refers to the way the relative pose is calculated.
    # Can be "global" or "relative", depending on the task. If the task requires
    # a comparison of global coordinates (relative to the table), then use "global",
    # eg. to place one object on top of another. Otherwise use "relative", eg. to 
    # connect two parts irrespective of global coordinates.
    frame: global
    relative_pose: [0, -0.025, 0, 0, 0, 0, 1] # (y points down)
    margin: [0.01, 0.01, 0.01, 1.1, 0.1, 0.1, 0.1] #0.01->slightly over 10 degree difference
  subtask2:
    description: Place the yellow box on the green box
    object: [4]
    relative_object: [1] #[1, 2] #compare with composite object 1+2, that has
                            #orientation pos(2)-pos(1) (normalized) and
                            #position = mean(pos(2)+pos(1))
    connection_type: place
    frame: global
    relative_pose: [0, -0.025, 0, 0, 0, 0, 1] #change this
    margin: [0.01, 0.01, 0.01, 1.1, 0.1, 0.1, 0.1]
  subtask3:
    description: Place the white box on the yellow box
    object: [3]
    relative_object: [4] #[1, 2, 3] #compare with composite object 1+2+3, that has
                               #orientation = pos(3)-pos(1+2) (normalized) and
                               #position = mean(pos(3)+pos(2)+pos(1))
    connection_type: place
    frame: global
    relative_pose: [0, -0.025, 0, 0, 0, 0, 1] #change this
    margin: [0.01, 0.01, 0.01, 1.1, 0.1, 0.1, 0.1]
